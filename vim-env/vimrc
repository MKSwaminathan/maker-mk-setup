"""""""""""""""""""""""""""""""""""""""""""
"              General Remaps             "
"""""""""""""""""""""""""""""""""""""""""""
:set mouse=a

" Inverse T arrow key configuration:
"      +-----------+
"      |     i     | 
"      |   j k l   |
"      +-----------+
:map i <Up>
:noremap j <Left>
:map k <Down>
:inoremap <C-i> <Up>
:inoremap <C-j> <Left> 
:inoremap <C-k> <Down>
:inoremap <C-l> <Right>

" Insert and Esc remaps
:noremap hh <Insert>
:vnoremap hh <S-i> 

inoremap kj <Esc>
:vnoremap kj <Esc> 
:cnoremap kj <Esc>

" Localizing begining and end of line cursor movements
:map ee 0
:map rr $
:noremap A 0<Insert>
:noremap S A

:inoremap <^>p <BS>
:nnoremap dwi dw<Insert>
:nnoremap cv <C-v>
:nnoremap sc <C-w><C-w>
" My tab is messed up
:inoremap <Tab> <Tab>


"""""""""""""""""""""""""""""""""""""""""""
"          View pdf files in vim          "
"""""""""""""""""""""""""""""""""""""""""""
:command! -complete=file -nargs=1 Rpdf :r !pdftotext -nopgbrk <q-args> -
:command! -complete=file -nargs=1 Rpdf :r !pdftotext -nopgbrk <q-args> - |fmt -csw78


"""""""""""""""""""""""""""""""""""""""""""
"               Cool Stuff                "
"""""""""""""""""""""""""""""""""""""""""""
function CommentBlock(len)
    let comment_dict = {
        \ 'python': '#',
        \ 'vim': '""'}
    let outstr = ""
    for idx in len
        if idx == 1 || idx == len-2
            outstr = outstr."  "
        endif
        outstr = outstr.comment_dict[&ft]
    endfor
    call setline('.', getline('.').outstr)
endfunction
:command CB call CommentBlock(10)

"""""""""""""""""""""""""""""""""""""""""""
"                  Other                  "
"""""""""""""""""""""""""""""""""""""""""""

set nocompatible

" allow plugins by file type (required for plugins!)
filetype plugin on
filetype indent on

" tabs and spaces handling
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" tab length exceptions on some file types
autocmd FileType html setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType javascript setlocal shiftwidth=4 tabstop=4 softtabstop=4
autocmd FileType python setlocal shiftwidth=4 tabstop=4 softtabstop=4

" status bar
set ls=2
set scrolloff=3
set incsearch
set hlsearch
syntax on

" show line numbers
set nu

" tab navigation mappings
map tl :tabn<CR>
map tj :tabp<CR>
map tm :tabm 
map tn :tab split<CR>
map <C-S-Right> :tabn<CR>
imap <C-S-Right> <ESC>:tabn<CR>
map <C-S-Left> :tabp<CR>
imap <C-S-Left> <ESC>:tabp<CR>

set completeopt-=preview

" save as sudo
ca w!! w !sudo tee "%"

" simple recursive grep
nmap ,r :Ack 
nmap ,wr :Ack <cword><CR>

" use 256 colors when possible
if (&term =~? 'mlterm\|xterm\|xterm-256\|screen-256') || has('nvim')
	let &t_Co = 256
    colorscheme darkspace
else
    colorscheme darkspace
endif

" colors for gvim
if has('gui_running')
    colorscheme darkspace
endif


" autocompletion of files and commands behaves like shell
set wildmode=list:longest

" better backup, swap and undos storage
set directory=~/.vim/dirs/tmp     " directory to place swap files in
set backup                        " make backup files
set backupdir=~/.vim/dirs/backups " where to put backup files
set undofile                      " persistent undos - undo after you re-open the file
set undodir=~/.vim/dirs/undos
set viminfo+=n~/.vim/dirs/viminfo
" store yankring history file there too
let g:yankring_history_dir = '~/.vim/dirs/'

" create needed directories if they don't exist
if !isdirectory(&backupdir)
    call mkdir(&backupdir, "p")
endif
if !isdirectory(&directory)
    call mkdir(&directory, "p")
endif
if !isdirectory(&undodir)
    call mkdir(&undodir, "p")
endif


" NERDTree ----------------------------- 00

map mn :NERDTreeToggle<CR>
nmap mc :NERDTreeFind<CR>
let NERDTreeIgnore = ['\.pyc$', '\.pyo$']

